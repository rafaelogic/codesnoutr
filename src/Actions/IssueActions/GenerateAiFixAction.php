<?php

namespace Rafaelogic\CodeSnoutr\Actions\IssueActions;

use Rafaelogic\CodeSnoutr\Contracts\Issues\IssueActionInterface;
use Rafaelogic\CodeSnoutr\Models\Issue;
use Rafaelogic\CodeSnoutr\Models\Setting;
use Rafaelogic\CodeSnoutr\Services\AI\AiFixGenerator;
use Illuminate\Support\Facades\Log;

class GenerateAiFixAction implements IssueActionInterface
{
    protected AiFixGenerator $aiFixGenerator;

    public function __construct(AiFixGenerator $aiFixGenerator)
    {
        $this->aiFixGenerator = $aiFixGenerator;
    }

    public function execute(Issue $issue): array
    {
        try {
            if (!$this->canExecute($issue)) {
                return [
                    'success' => false,
                    'message' => 'AI Auto-Fix is not configured or issue already has a fix',
                    'data' => null
                ];
            }

            $result = $this->aiFixGenerator->generateFix($issue);
            
            if ($result['success']) {
                $issue->update([
                    'ai_fix' => $result['content'],
                    'ai_explanation' => 'Generated by AI Auto-Fix',
                    'ai_confidence' => $result['confidence'] ?? 0.75
                ]);
                
                return [
                    'success' => true,
                    'message' => 'Auto-fix suggestion generated successfully!',
                    'data' => [
                        'issueId' => $issue->id,
                        'filePath' => $issue->file_path,
                        'aiFix' => $result['content'],
                        'confidence' => $result['confidence'] ?? 0.75
                    ]
                ];
            }

            return [
                'success' => false,
                'message' => $result['error'] ?? 'Failed to generate AI fix',
                'data' => null
            ];

        } catch (\Exception $e) {
            Log::error('Auto-fix generation failed: ' . $e->getMessage());
            return [
                'success' => false,
                'message' => 'An error occurred while generating auto-fix. Please try again.',
                'data' => null
            ];
        }
    }

    public function getDescription(): string
    {
        return 'Generate AI-powered fix suggestion';
    }

    public function canExecute(Issue $issue): bool
    {
        return $this->isAiConfigured() && 
               empty($issue->ai_fix) && 
               !$issue->fixed;
    }

    protected function isAiConfigured(): bool
    {
        $aiEnabled = Setting::getValue('ai_enabled', false);
        $apiKey = Setting::getOpenAiApiKey();
        
        return $aiEnabled && !empty($apiKey);
    }
}